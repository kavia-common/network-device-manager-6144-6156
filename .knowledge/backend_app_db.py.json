{"is_source_file": true, "format": "Python", "description": "This Python module provides utility functions for establishing and managing a MongoDB connection using pymongo, specifically tailored to access a 'devices' collection within a Flask application context. It includes functions to obtain a singleton MongoClient, retrieve the database, and access the devices collection, relying on configuration variables for connection details.", "external_files": ["pymongo", "flask"], "external_methods": ["pymongo.MongoClient", "flask.current_app.config.get"], "published": ["get_client", "get_db", "get_devices_collection"], "classes": [], "methods": [{"name": "_get_uri_and_db()", "description": "Fetches MongoDB URI and database name from Flask app configuration, raising errors if missing.", "scope": "", "scopeKind": ""}, {"name": "MongoClient get_client()", "description": "Returns a singleton instance of MongoClient configured from app settings.", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "Returns the MongoDB database object based on current configuration.", "scope": "", "scopeKind": ""}, {"name": "get_devices_collection()", "description": "Returns the 'devices' collection from the configured database.", "scope": "", "scopeKind": ""}], "calls": ["flask.current_app.config.get", "MongoClient", "client[dbname]", "db[\"devices\"]"], "search-terms": ["mongodb connection", "flask app config", "singleton MongoClient", "devices collection", "pymongo"], "state": 2, "file_id": 7, "knowledge_revision": 30, "git_revision": "", "revision_history": [{"17": ""}, {"30": ""}], "ctags": [{"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/db.py", "pattern": "/^_client: Optional[MongoClient] = None$/", "language": "Python", "typeref": "typename:Optional[MongoClient]", "kind": "variable"}, {"_type": "tag", "name": "_get_uri_and_db", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/db.py", "pattern": "/^def _get_uri_and_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_client", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/db.py", "pattern": "/^def get_client() -> MongoClient:$/", "language": "Python", "typeref": "typename:MongoClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/db.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_devices_collection", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/db.py", "pattern": "/^def get_devices_collection():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "809f61b9f855e2279fd66ed752e0b216", "format-version": 4, "code-base-name": "backend", "filename": "backend/app/db.py", "fields": [{"name": "Optional[MongoClient] _client", "scope": "", "scopeKind": "", "description": "unavailable"}]}