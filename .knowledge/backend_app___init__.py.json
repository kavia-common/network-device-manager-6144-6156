{"is_source_file": true, "format": "Python", "description": "This is the initialization module for a Flask-based web application that sets up the app, configures API documentation, CORS, environment variables, and registers blueprints for routes such as health checks and device management.", "external_files": ["flask", "flask_cors", "flask_smorest", "dotenv", "./routes/health", "./routes/devices"], "external_methods": ["flask.Flask", "flask_cors.CORS", "flask_smorest.Api", "dotenv.load_dotenv", "os.getenv", "os.path.rstrip"], "published": ["create_app", "app", "api"], "classes": [{"name": "Flask", "description": "Main Flask application class used to create and configure the web app."}, {"name": "Api", "description": "Object from flask_smorest used to define the API, register blueprints, and generate OpenAPI documentation."}], "methods": [{"name": "bool _get_bool_env(name: str, default: bool = False)", "description": "Utility function to parse boolean environment variables from environment strings.", "scope": "", "scopeKind": ""}, {"name": "create_app()", "description": "Function that creates and configures the Flask application, including setting API info, CORS, environment variables, and registering blueprints.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv()", "os.getenv()", "flask.Flask()", "CORS()", "Api()", "api.register_blueprint()", "getattr()", "app.extensions[]"], "search-terms": ["create_app", "Flask app initialization", "blueprint registration", "API configuration", "CORS setup", "environment variable parsing"], "state": 2, "file_id": 5, "knowledge_revision": 14, "git_revision": "77ddf91fccb446b22e2becefb53943a4ec327918", "revision_history": [{"13": "77ddf91fccb446b22e2becefb53943a4ec327918"}, {"14": "77ddf91fccb446b22e2becefb53943a4ec327918"}], "ctags": [{"_type": "tag", "name": "_get_bool_env", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/__init__.py", "pattern": "/^def _get_bool_env(name: str, default: bool = False) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(name: str, default: bool = False)"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/__init__.py", "pattern": "/^api = app.extensions[\"smorest_api\"]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/__init__.py", "pattern": "/^app = create_app()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/__init__.py", "pattern": "/^def create_app():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "devices_blp", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/__init__.py", "pattern": "/^    from .routes.devices import blp as devices_blp$/", "file": true, "language": "Python", "kind": "unknown", "scope": "create_app", "scopeKind": "function", "nameref": "unknown:blp"}, {"_type": "tag", "name": "health_blp", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/__init__.py", "pattern": "/^from .routes.health import blp as health_blp$/", "language": "Python", "kind": "unknown", "nameref": "unknown:blp"}], "hash": "54d5ac09c342549bee288fb770b9a138", "format-version": 4, "code-base-name": "backend", "filename": "backend/app/__init__.py", "fields": [{"name": "api = app.extensions[\"smorest_api\"]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "app = create_app()", "scope": "", "scopeKind": "", "description": "unavailable"}]}