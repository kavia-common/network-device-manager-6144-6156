{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing network devices, including CRUD operations and ping functionality, using Flask and Flask-Smorest. It includes route definitions, request handling, database interactions, and internal helper functions.", "external_files": ["../db", "../schemas", "../utils/ping"], "external_methods": ["get_devices_collection", "DeviceCreateSchema", "DeviceUpdateSchema", "DeviceResponseSchema", "ping_host"], "published": ["blp"], "classes": [{"name": "DevicesList", "description": "Handles listing all devices and creating new devices via HTTP GET and POST methods."}, {"name": "DeviceDetail", "description": "Provides retrieval, updating, and deletion of individual devices identified by device_id."}, {"name": "DevicePing", "description": "Handles pinging a device by ID and optionally updating its status based on the ping result."}], "methods": [{"name": "dict _serialize_device(doc)", "description": "Serializes a MongoDB device document into a dictionary suitable for API responses.", "scope": "", "scopeKind": ""}, {"name": "_now()", "description": "Returns the current UTC datetime.", "scope": "", "scopeKind": ""}, {"name": "get(self)", "description": "Handles GET request to list all devices.", "scope": "DevicesList", "scopeKind": "class"}, {"name": "post(self, device_id)", "description": "Handles POST request to create a new device.", "scope": "DevicePing", "scopeKind": "class"}, {"name": "get(self, device_id)", "description": "Retrieves a specific device by ID.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "put(self, payload, device_id)", "description": "Updates a device specified by device ID.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "delete(self, device_id)", "description": "Deletes a device specified by device ID.", "scope": "DeviceDetail", "scopeKind": "class"}, {"name": "post(self, payload)", "description": "Pings a device by ID, potentially updating its status based on the ping result.", "scope": "DevicesList", "scopeKind": "class"}], "calls": ["get_devices_collection()", "coll.find()", "coll.insert_one()", "coll.find_one()", "coll.find_one_and_update()", "coll.delete_one()", "ping_host()"], "search-terms": ["devices API", "ping_device", "DeviceResponseSchema", "DeviceCreateSchema", "DeviceUpdateSchema", "CRUD devices", "network device management"], "state": 2, "file_id": 10, "knowledge_revision": 23, "git_revision": "", "ctags": [{"_type": "tag", "name": "DeviceDetail", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^class DeviceDetail(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicePing", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^class DevicePing(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "DevicesList", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^class DevicesList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_now", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^def _now():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_serialize_device", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^def _serialize_device(doc) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(doc)"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^    def delete(self, device_id):$/", "language": "Python", "kind": "member", "signature": "(self, device_id)", "scope": "DeviceDetail", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "DevicesList", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^    def get(self, device_id):$/", "language": "Python", "kind": "member", "signature": "(self, device_id)", "scope": "DeviceDetail", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^    def post(self, device_id):$/", "language": "Python", "kind": "member", "signature": "(self, device_id)", "scope": "DevicePing", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^    def post(self, payload):$/", "language": "Python", "kind": "member", "signature": "(self, payload)", "scope": "DevicesList", "scopeKind": "class"}, {"_type": "tag", "name": "put", "path": "/home/kavia/workspace/code-generation/network-device-manager-6144-6156/backend/app/routes/devices.py", "pattern": "/^    def put(self, payload, device_id):$/", "language": "Python", "kind": "member", "signature": "(self, payload, device_id)", "scope": "DeviceDetail", "scopeKind": "class"}], "hash": "15a2641a3cb8b3ce42bd3bd92ba34fe4", "format-version": 4, "code-base-name": "backend", "filename": "backend/app/routes/devices.py", "fields": [{"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"23": ""}]}